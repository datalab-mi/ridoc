certResolvers:
  le:
    email: datalab@interieur.gouv.fr
    httpChallenge:
      entryPoint: "web"
    storage: /data/acme.json
    #caServer: https://acme-staging-v02.api.letsencrypt.org/directory
persistence:
  enabled: true
  name: traefik-internal
  accessMode: ReadWriteOnce
  size: 1Gi
  path: /data


service:
  enabled: false


providers:
  kubernetesIngress:
    allowExternalNameServices: false
    allowCrossNamespace: true
    allowEmptyServices: true
    publishedService:
      enabled: true
    enabled: true
  kubernetesCRD:
    allowCrossNamespace: true

ingressClass:
  enabled: true
  isDefaultClass: true

ports:
  web:
    redirectTo: 
      port: websecure
    hostPort: 80 
  websecure:
    tls:
      certResolver: le
    hostPort: 443

deployment:
  # Can be either Deployment or DaemonSet
  kind: DaemonSet
  initContainers:
    - name: volume-permissions
      image: busybox:latest
      securityContext:
        runAsNonRoot: false
        runAsGroup: 0
        runAsUser: 0
      command: ["sh", "-c", "sleep 30 ;chown -R 65532:65532 /data; chmod -Rv 600 /data/*"]
      volumeMounts:
      - mountPath: /data
        name: traefik-internal
  # additionalContainers:
    # - name: stream-accesslog
    #   args:
    #   - /bin/sh
    #   - -c
    #   - tail -n+1 -F /tmp/traefik/access.log
    #   image: busybox
    #   imagePullPolicy: Always
    #   resources: {}
    #   terminationMessagePath: /dev/termination-log
    #   terminationMessagePolicy: File
    #   volumeMounts:
    #   - mountPath: /tmp/traefik
    #     name: traefik-logs
    #     readOnly: true

  additionalVolumes:
    - name: traefik-logs
      hostPath:
        path: /tmp


updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 0

additionalVolumeMounts:
  - name: traefik-logs
    mountPath: /tmp/traefik

logs:
  general:
    # Alternative logging levels are DEBUG, PANIC, FATAL, ERROR, WARN, and INFO.
    level: INFO
    # format: json
  access:
    # To enable access logs
    enabled: true
    # format: json
    ## By default, logs are written using the Common Log Format (CLF) on stdout.
    ## To write logs in JSON, use json in the format option.
    ## If the given format is unsupported, the default (CLF) is used instead.
    filePath: "/tmp/traefik/access.log"
    # filters:
    #   minDuration: "1ms"
    #   statuscodes: "200_209"
    # headers:
    #   defaultmode: drop
    #   names:
    #   ## Examples:
    #   # User-Agent: redact
    #   # Authorization: drop
    #   # Content-Type: keep
ingressRoute:
  dashboard:
    enabled: true
    # Custom match rule with host domain
    matchRule: Host(`kubernetes.ridoc.fr`) && PathPrefix(`/dashboard`)
    entryPoints: ["websecure"]
    # Add custom middlewares : authentication and redirection
    middlewares:
      - name: traefik-dashboard-auth
        namespace: traefik

extraObjects:
  - apiVersion: v1
    kind: Secret
    metadata:
      name: traefik-dashboard-auth-secret
      namespace: traefik
    type: kubernetes.io/basic-auth
    stringData:
      username: admin
      password: admin

  - apiVersion: traefik.io/v1alpha1
    kind: Middleware
    metadata:
      name: traefik-dashboard-auth
      namespace: traefik
    spec:
      basicAuth:
        secret: traefik-dashboard-auth-secret

  # - apiVersion: v1
  #   kind: PersistentVolumeClaim
  #   metadata:
  #     name: traefik-access-log
  #   spec:
  #     accessModes:
  #       - ReadWriteOnce
  #     resources:
  #       requests:
  #         storage: 10Mi